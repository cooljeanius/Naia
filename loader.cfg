#textdomain wesnoth-Naia
#
# codename Naia - Project Ethea phase 1 campaigns shared library
# Copyright (C) 2006 - 2021 by Iris Morelle <shadowm@wesnoth.org>
#
# See COPYING for usage terms.
#

# Add-ons may ship a local snapshot of Naia. If that is the case, they must
# define NAIA_EMBEDDED with the add-on's folder name before including this
# loader file so that WML and Lua path references will point to the snapshot
# instead of a non-existent default path.

#ifndef NAIA_EMBEDDED

#define NAIA_PREFIX
~add-ons/Naia#enddef
#define NAIA_BINARY_PATH
data/add-ons/Naia#enddef

#else

#define NAIA_PREFIX
~add-ons/{NAIA_EMBEDDED}/Naia#enddef
#define NAIA_BINARY_PATH
data/add-ons/{NAIA_EMBEDDED}/Naia#enddef

#endif

[binary_path]
    path={NAIA_BINARY_PATH}
[/binary_path]

#define LN _PATH
{{NAIA_PREFIX}/{_PATH}}#enddef

#define NAIA_VERSION
"{LN dist/VERSION}"#enddef

{./core/i18n.cfg}

#ifndef __WMLUNITS__
{./terrain-graphics/}
{./terrain.cfg}
#endif

#ifndef EDITOR

{./core/debug.cfg}
{./core/display.cfg}
{./core/events.cfg}
{./core/variables.cfg}
{./core/variables-math.cfg}
{./core/variables-persistent.cfg}

{./macros/}

[units]
    {./units/}
[/units]

#ifndef __WMLUNITS__

{./ai/}

[lua]
    code=<<
        PROJECT_ETHEA_NAIA_VERSION = '>>{NAIA_VERSION}<<'

        helper = wesnoth.require "helper.lua"
        utils = wesnoth.require "wml-utils.lua"
        on_event = wesnoth.require "on_event.lua"

        local naia_prefix = '>>{NAIA_PREFIX}<<'

        local function format_naia_path(file)
            return ('%s/lua/%s.lua'):format(naia_prefix, file)
        end

        wesnoth.dofile(format_naia_path('base'))

        -- Load local code files.
        for i, file in ipairs {
            'package',
            'common',
            'abilities',
            'conditional',
            'hmu',
            'npc',
            'optimizations',
            'patch',
            'persistent',
            'spawner',
            'theme',
            'units',
            'wlp',
            'gui/amla_list',
            'gui/bug',
            'gui/item_prompt',
            'gui/transient_message',
            'compat',
        }
        do
            local path = format_naia_path(file)
            wprintf(W_INFO, 'Init: loading %s', path)
            wesnoth.dofile(path)
        end

        -- Execute additional global WML below.
        utils.handle_event_commands(...)
    >>

    [args]
        {AMLA_MENU}
    [/args]
[/lua]

#endif

#else

[editor_group]
    id = "wesnoth-UMC-Naia"
    name = _ "Project Ethea"
    icon = "group_custom"
[/editor_group]

#endif

# wmllint: general spellings Goliath shaxthal shaxthals verlissh verlisshi
# wmllint: general spellings Zhangor Althurin Asthorgar Irdya Quenoth Merthiaal
# wmllint: general spellings Armageddon golem golems goliath magus Uria demoness
# wmllint: general spellings demonesses imp Inferno Adavyan Mindraider Psy
# wmllint: general spellings faerie faeries gutwrencher razerman longbowman
# wmllint: general spellings crossbowman hellhound Aragwaith Aragwaithi
# wmllint: general spellings arcanister runemaster runesmith
# wmllint: general spellings Rythé Rythénian Rythénians Argazar argazars
# wmllint: general spellings strongbow longswordsmen headhunter
# wmllint: general spellings soulhunter rayblade wyrm noctum ensnare
# wmllint: general spellings biomechanical biomechanicals touchplate touchgem
# wmllint: general spellings lorekeeper lorekeepers Irdyan facemask wisemen
# wmllint: general spellings firestick loremaster loremasters dreadcrafter
# wmllint: general spellings dreadcrafters spellcaster spellcasters nyx
# wmllint: general spellings unliving elven elvenkind marchlands un-death

# wmllint: general spellings amidst amongst onwards orchestrator
# wmllint: general spellings single-handedly glyphs mayhap 'Tis
# wmllint: general spellings saurians unexperienced reknit

# wmllint: general spellings AMLAs
